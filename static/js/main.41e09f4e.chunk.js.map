{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operation.js","redux/auth/auth-selectors.js","components/AuthNav/AuthNav.module.css","redux/contacts/contacts-reducer.js","components/UserMenu/UserMenu.module.css","components/Header/Header.module.css","components/Logo/Logo.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/Container/Container.module.css","routes.js","components/Logo/Logo.js","components/AuthNav/AuthNav.js","images/default-avatar.png","components/UserMenu/UserMenu.js","components/Header/Header.js","components/Container/Container.js","components/PrivatRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","contactsOperations","resetContacts","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUserName","module","exports","items","addContactsSuccess","deleteContactsSuccess","filter","id","fetchContactsSuccess","changeFilter","loading","addContactsRequest","addContactsError","deleteContactsRequest","deleteContactsError","fetchContactsRequest","fetchContactsError","addContact","number","contact","then","catch","deleteContact","delete","fetchContacts","getContacts","contacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","routes","home","login","Logo","to","exact","CSSTransition","in","appear","classNames","s","timeout","className","title","AuthNav","link","activeClassName","link_active","mapDispatchToProps","onLogout","connect","authSelectors","avatar","defaultAvatar","menu","src","alt","width","Button","type","variant","color","onClick","container","Container","children","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","PrivatRoute","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.41e09f4e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\nimport { contactsOperations } from '../contacts';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nexport const register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nexport const logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nexport const logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n    dispatch(contactsOperations.resetContacts());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { getIsAuthenticated, getUserName };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3jXrU\",\"link_active\":\"AuthNav_link_active__3miI5\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"UserMenu_menu__23X5e\",\"avatar\":\"UserMenu_avatar__28I2-\",\"name\":\"UserMenu_name__-W-CN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2C9cS\",\"link\":\"Header_link__3CVH-\",\"link_active\":\"Header_link_active__3Snog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Logo_appear__1zo8v\",\"appearActive\":\"Logo_appearActive__3nXdL\",\"title\":\"Logo_title__1Cw0X\"};","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch(error => dispatch(deleteContactsError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst resetContacts = () => dispatch => {\r\n  dispatch(fetchContactsSuccess([]));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts, resetContacts };\r\n","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__UsY1P\"};","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <>\r\n      <NavLink to={routes.home} exact>\r\n        <CSSTransition in={true} appear={true} classNames={s} timeout={500}>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to={routes.register}\r\n        className={s.link}\r\n        activeClassName={s.link_active}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.login}\r\n        className={s.link}\r\n        activeClassName={s.link_active}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, logOut } from '../../redux/auth';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={s.menu}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n    <span className={s.name}>Добро пожаловать, {name}</span>\r\n    <Button\r\n      type=\"button\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={onLogout}\r\n    >\r\n      Выйти\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport Logo from '../Logo';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport s from './Header.module.css';\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={s.container}>\r\n      <Logo />\r\n\r\n      {isAuthenticated ? (\r\n        <>\r\n          <NavLink\r\n            to={routes.contacts}\r\n            exact\r\n            className={s.link}\r\n            activeClassName={s.link_active}\r\n          >\r\n            Контакты\r\n          </NavLink>\r\n          <UserMenu />\r\n        </>\r\n      ) : (\r\n        <AuthNav />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from './components/Header';\nimport Container from './components/Container';\nimport routes from './routes';\nimport { getCurrentUser } from './redux/auth';\nimport PrivatRoute from './components/PrivatRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header />\n\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginView}\n            />\n            <PrivatRoute\n              path={routes.contacts}\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: 'token',\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}