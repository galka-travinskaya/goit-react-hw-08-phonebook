{"version":3,"sources":["views/RegisterView/Register.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","s","content","title","onSubmit","autoComplete","form","type","field","onChange","Button","variant","color","btn","Component","mapDispatchToProps","register","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,KAAO,uBAAuB,MAAQ,0B,oLCKtHC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,sBAAKW,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,gFAEA,uBACEC,SAAUL,KAAKL,aACfW,aAAa,MACbL,UAAWC,IAAEK,KAHf,UAKE,uDAEE,uBACEC,KAAK,OACLpB,KAAK,OACLK,MAAOL,EACPa,UAAWC,IAAEO,MACbC,SAAUV,KAAKT,kBAGnB,mEAEE,uBACEiB,KAAK,QACLpB,KAAK,QACLK,MAAOJ,EACPY,UAAWC,IAAEO,MACbC,SAAUV,KAAKT,kBAInB,yEAEE,uBACEiB,KAAK,WACLpB,KAAK,WACLK,MAAOH,EACPW,UAAWC,IAAEO,MACbC,SAAUV,KAAKT,kBAInB,cAACoB,EAAA,EAAD,CACEH,KAAK,SACLI,QAAQ,YACRC,MAAM,UACNZ,UAAWC,IAAEY,IAJf,oI,GA9DiBC,aA4ErBC,EAAqB,CACzBjB,WAAYkB,KAGCC,cAAQ,KAAMF,EAAdE,CAAkChC","file":"static/js/6.318b9278.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Register_content__2O89F\",\"title\":\"Register_title__25q3L\",\"form\":\"Register_form__QnekN\",\"field\":\"Register_field__34ng7\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../../redux/auth';\r\nimport s from './Register.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div className={s.content}>\r\n        <h1 className={s.title}>Регистрация</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\"\r\n          className={s.form}\r\n        >\r\n          <label>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              className={s.field}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              className={s.field}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              className={s.field}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={s.btn}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}